#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\begin_modules
theorems-ams-bytype
theorems-ams-extended-bytype
theorems-sec-bytype
eqs-within-sections
multicol
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 1
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2.6cm
\rightmargin 3cm
\bottommargin 2.8cm
\headheight 0cm
\headsep 0cm
\footskip 0cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Flow chart of program
\end_layout

\begin_layout Subsection
Points to Consider
\end_layout

\begin_layout Enumerate
Every ScrollView has it's own independent Fixed count downloader and Pooler.
\end_layout

\begin_layout Subsection
Navigation
\end_layout

\begin_layout Subsubsection
When Catalogue Viewer is Requested (Same for Furniture)
\end_layout

\begin_layout Enumerate
Furniture and Fabric OnUILeave is called.
\end_layout

\begin_layout Enumerate
Catalogue UILoad is called.
\end_layout

\begin_layout Enumerate
Finally, all viewers are disabled and selected viewer is enabled.
\end_layout

\begin_layout Subsubsection
When UILeave is Requested
\end_layout

\begin_layout Enumerate
All Thumbnail references are removed from all buttons in scrollview, but
 not from the Model, because while loading, buttons will rerequest the images
 from Model.
\end_layout

\begin_layout Enumerate
If UIleave is called before completion of UILoad of same scrollview, coroutine
 will be destriyed and set to null.
\end_layout

\begin_layout Enumerate
Finally, Pooler will remove buttons from current viewer.
\end_layout

\begin_layout Subsubsection
When UIVisible is Requested
\end_layout

\begin_layout Enumerate
A parameter is passed from the calling location to next page so that we
 can use that parameter to decide the filling of buttons.
 It is currently useful for Fabrics since they are dependent on previous
 catalogue, but implemented in general for same codebase.
 Catalogue button click will send the index of catalogue in Global List
 of catalogues.
\end_layout

\begin_layout Enumerate
Download Progress is set to null for later purposes.
\end_layout

\begin_layout Enumerate
GetList Method is called, which must be implemented in derived class such
 as CatalogueView.cs.
 Since GetList method will call coroutine tasks, another coroutine in parallel
 will be started, namely LoadUI() and will nnot continue untill Download
 Progress in step 2 is set to true in GetList()
\end_layout

\begin_layout Enumerate
List will be requested from corresponding Generator and will be stored in
 ModelList, for e.g.
 FabricGenerator
\end_layout

\begin_layout Enumerate
OnSuccess, Download Complete will be set to true.
\end_layout

\begin_layout Enumerate
Now starts the loading of UI.
 ModelList, filled in step 4 will be used here.
 Number of buttons to display are sent and pooler will complete the work
 of filling viewer with buttons.
 While the buttons are created, corresponding callbacks will be made for
 recently added button in scrollview (Not attached to buttons here!).
 Callback contains parameter that denotes the current button index in list
 and it's ButtonModel as second parameter.
\end_layout

\begin_layout Enumerate
Button is initialized in callback, with parameter: Model to be implemented
 on button, from Step 4, and on filling button, a callback that will attach
 OnClick Property to Button.
\end_layout

\begin_layout Enumerate
Finally, Coroutine is set to null, which was used in step 2 of UILeave().
\end_layout

\begin_layout Subsection
Thumbnail Loading
\end_layout

\begin_layout Subsubsection
Thumbnail Loading on button
\end_layout

\begin_layout Standard
In execution of step 7 of previous subsection, following is the flow
\end_layout

\begin_layout Enumerate
Model will be implemented on Button, that is specific to individual models.
\end_layout

\begin_layout Enumerate
Base implementation is called.
 If a progress bar is set, will be enabled to loading.
\end_layout

\begin_layout Enumerate
Thumbnail loadding request will be made from LoadThumbnail method of Model
 class, that will returns the thumbanail after request from memory/HDD/server.
\end_layout

\begin_layout Enumerate
Finally ButtonClick listeners will be attached to current button.
 This listener was set in ScrollView, that referes to OnButtonClick(U Model).
\end_layout

\begin_layout Subsubsection
Thumbnail Loading on Model
\end_layout

\begin_layout Enumerate
A check is made whether the thhumbanil is already requested in past.
 If yes, that thumbnail will be returned.
\end_layout

\begin_layout Enumerate
A check for Thumbnail existence on disk is requested from Global class.
 If fails, download request procees from ThumbnailDownloader.cs.
\end_layout

\begin_layout Enumerate
For harddisk file loading, thumbanil url and last modified date is sent.
 This combination is used to generate filename for thumbnail, that will
 be searched for existence in disk.
\end_layout

\begin_layout Enumerate
For Web Thumbanil Loading, request to FixedCountDownloader is made, that
 stores the request in queue.
 It is simulated to be called from each frame by calling the Update function
 of this, from the Unity Update function, inside ScrollView.
\end_layout

\end_body
\end_document
